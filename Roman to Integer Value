import java.util.HashMap;
import java.util.Map;

public class RomanToInteger {
    public static int romanToInt(String str) {
        // Create a map to store the values of Roman numeral characters
        Map<Character, Integer> romanValues = new HashMap<>();
        romanValues.put('I', 1);
        romanValues.put('V', 5);
        romanValues.put('X', 10);
        romanValues.put('L', 50);
        romanValues.put('C', 100);
        romanValues.put('D', 500);
        romanValues.put('M', 1000);

        int result = 0;
        int prevVal = 0;  // To keep track of the previous character's value

        // Iterate through the Roman numeral string from right to left
        for (int i = str.length() - 1; i >= 0; i--) {
            int value = romanValues.get(str.charAt(i));

            // If the previous character's value is less than the current character's value, subtract it
            if (prevVal < value) {
                result -= prevVal;
            } else {
                result += prevVal;
            }

            prevVal = value;
        }

        // Add the value of the first character
        result += prevVal;

        return result;
    }

    public static void main(String[] args) {
        String romanNumeral = "IX";
        int integerEquivalent = romanToInt(romanNumeral);
        
        System.out.println("The integer equivalent of " + romanNumeral + " is: " + integerEquivalent);
    }
}
